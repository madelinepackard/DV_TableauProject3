<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='FOOD_CALS_TABLE (C##CS329E_MAP4542)' inline='true' name='oracle.42134.753843958300' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_MAP4542' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_map4542'>
        <relation name='FOOD_CALS_TABLE' table='[C##CS329E_MAP4542].[FOOD_CALS_TABLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DISPLAY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISPLAY_NAME]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>DISPLAY_NAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOOD_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FOOD_CODE]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>FOOD_CODE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>10</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CALORIES</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CALORIES]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>CALORIES</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>24</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PORTION_AMOUNT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PORTION_AMOUNT]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>PORTION_AMOUNT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>9</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PORTION_DEFAULT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PORTION_DEFAULT]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>PORTION_DEFAULT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>9</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PORTION_DISPLAY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PORTION_DISPLAY_NAME]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>PORTION_DISPLAY_NAME</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>56</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SATURATED_FATS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SATURATED_FATS]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>SATURATED_FATS</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>12</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SOLID_FATS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SOLID_FATS]</local-name>
            <parent-name>[FOOD_CALS_TABLE]</parent-name>
            <remote-alias>SOLID_FATS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>12</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calories' datatype='real' datatype-customized='true' name='[CALORIES]' role='measure' type='quantitative'>
      </column>
      <column caption='Display Name' datatype='string' name='[DISPLAY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Food Code' datatype='integer' datatype-customized='true' name='[FOOD_CODE]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Portion Amount' datatype='real' datatype-customized='true' name='[PORTION_AMOUNT]' role='measure' type='quantitative'>
      </column>
      <column caption='Portion Default' datatype='real' datatype-customized='true' name='[PORTION_DEFAULT]' role='dimension' type='ordinal'>
      </column>
      <column caption='Portion Display Name' datatype='string' name='[PORTION_DISPLAY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Saturated Fats' datatype='real' datatype-customized='true' name='[SATURATED_FATS]' role='measure' type='quantitative'>
      </column>
      <column caption='Solid Fats' datatype='real' datatype-customized='true' name='[SOLID_FATS]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[DISPLAY_NAME]' derivation='None' name='[none:DISPLAY_NAME:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:DISPLAY_NAME:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Apple crisp&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Baked chicken breast (no skin)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Baked, broiled, or sauteed shrimp&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Beef and cheese burrito (no beans)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Beef, veggies &amp; noodles (tomato sauce)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bread stuffing&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Butter&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Carrot juice&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cheese sauce&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chicken Teriyaki frozen meal&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chicken curry&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chocolate milk, fat free (skim)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Coffee&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cooked hot peppers&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Cornbread or corn muffin&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Creamed spinach&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Dietetic syrup&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Egg white&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fiber One cereal&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;French toast sticks&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fried fish sandwich with tartar sauce&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Frozen fruit juice bar&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fruit-filled Danish pastry&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Grapes (raw)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guava (raw)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Hot &amp; sour soup&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Jelly&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Light butter&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Low lactose reduced fat (2\%) milk&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Macaroni salad&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Matzo pancake&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Meatloaf or meatballs &amp; tomato sauce&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Mung bean noodles&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Parmesan or Romano cheese&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Pear (raw)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Pita bread (white)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Potato pancake (latke)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Raised doughnut&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Reduced fat cheese cracker&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Roast pork tenderloin&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sausage gravy&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Snack Mix (pretzel, nut, cereal mix)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Spaghetti, macaroni, or pasta (plain)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Stir-fried chicken and vegetables&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Sweet &amp; sour pork on rice&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Teriyaki sauce&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tub spread (margarine type)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vegetable combo (Asian style)&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Water chestnut&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Whole wheat English muffin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1\% milk (low fat)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Apple juice (100\% juice)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Baked chicken dark meat (no skin)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Banana chips&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Beef brisket&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Biscotti&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Breaded fried steak (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Butterfinger candy bar&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cashews&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cheese spread or dip&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Chicken fajitas with veggies &amp; guacamole&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Chicken with BBQ sauce&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Chocolate raised doughnut, frosted&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Coffee Mate (liquid)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cooked mushrooms&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Corned beef hash&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Croissant&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Dill pickle&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Egg, cheese &amp; ham on English muffin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fig bar (Fig Newton)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fried breaded fish fillet&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fried okra&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Frozen yogurt, low fat sugar free&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Fudge sauce (thick type)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Green tomato-chile sauce&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Half &amp; Half&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hummus&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Kashi, puffed&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Light fudgesicle&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Low-calorie frozen fruit juice bar&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Maki sushi (rolled sushi with veggies)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Meal replacement bar (Slim Fast bar)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mexican beef vegetable soup&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Mustard&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Pasta salad with meat and vegetables&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Pecan pie&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Plain Danish pastry&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Potato salad&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Raisin bagel&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Reduced-calorie spread (margarine type)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Roasted Cornish game hen&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sauteed green peppers &amp; onions&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Soft drink, diet&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Special K cereal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Stir-fried shrimp and vegetables&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sweet and sour sauce (Vietnamese Sauce)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Thousand island dressing&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tuna noodle casserole&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Vegetable pizza, thick crust&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Wheat Bagel (part whole wheat)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Whole wheat spaghetti or pasta (plain)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;100\% whole wheat bread&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Applesauce (unsweetened)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Baked or broiled catfish&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Battered fried chicken breast, no skin&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Beef curry&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Blue cheese dressing&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Breaded pork chop (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Caesar salad with dressing&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cheerios&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cheeseburger, plain on bun&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Chicken liver pate&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Chiles rellenos&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Chocolate-covered candy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Coleslaw&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cooked sweet peppers&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cracked wheat English muffin&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dark chocolate candy bar&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Dried tomatoes&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;English muffin&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Flavored yogurt, fat-free sugar-free&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fried chicken breast (no skin)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fried pork chop (eat lean only)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fruit cocktail (canned in heavy syrup)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Gefilte fish&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Grilled cheese sandwich&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hard candy&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ice cream cone (sugar cone, shell only)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Kix cereal&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Light soft serve ice cream&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Low-fat granola cereal&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Meat &amp; veggie pizza, thick crust&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Milk chocolate fruit &amp; nut bar&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Nonfat dry milk, reconstituted&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Peach (canned in light syrup)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Pepperpot soup or menudo soup&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Plantain (boiled or baked)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Pound cake&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Ramen noodle soup&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Reduced-fat snack cracker&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Roasted turkey (white meat)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Seafood salad (with tomatoes, dressing)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sorbet (made with fruit)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Split peas&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Stuffed baked potato (with sour cream)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Syrup (all types)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Tofutti tofu frozen dessert&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Turkey lunch meat, fat free&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Vegetable soup&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Wheat roll (part whole wheat)&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Won ton soup&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Animal cracker&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Baked apple (sweetened)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Baked potato, plain (eat peel)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bean soup with macaroni&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Beef taco with cheese and lettuce&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Brandy or cognac&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Brownie with icing&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cappuccino&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cheese pizza, thin crust&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chicken cacciatore&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chicken salad spread&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Chocolate fudge cookie&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cocktail sauce&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cooked eggplant&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Corn pudding (scalloped corn)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cream of tomato soup&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Diet pudding (instant or canned)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Egg noodles with butter or oil&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fat-free ranch dressing&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;French fries, deep-fried&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fried clams (battered)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Froot Loops cereal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fruit topping&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Grape-Nuts cereal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ground beef (90\% lean)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Honeycomb cereal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Jam or preserves (low sugar)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Lentil soup&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Low fat ice cream&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Macadamia nuts&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mashed sweet potato&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Meatless fried chicken (breaded)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mole poblana sauce&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Orange juice (sweetened)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Peanut butter, reduced fat&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pineapple (raw)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pork spareribs (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Quarter pound cheeseburger on bun&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Raw onion&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Roast beef (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Saltine cracker&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Slurpee or snow cone&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Spaghetti sauce (with meat)&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Stewed tomatoes&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sunflower seeds&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tartar sauce&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Total cereal&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Vegemite&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Waffle&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;White roll&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ambrosia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bacon&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Baked or broiled trout&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bean enchilada&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Beef soft taco&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bologna&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Broccoli-rice casserole&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Canned tuna (in oil)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cheese enchilada&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Chicken &amp; cheese quesadilla&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Chicken Parmigiana&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Chocolate chips&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cinnamon bread or toast&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cooked Brussels sprouts&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Corn dog (hot dog, cornbread coating)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cream of broccoli soup&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Dessert wine (all)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Egg &amp; sausage on biscuit&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fat-free cheese Danish pastry&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fortified high energy bar (Powerbar)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fried chicken thigh (eat skin)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fried steak (eat lean only)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fruit shortcake with whipped cream&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Graham cracker&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Grits, with butter&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Honey&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Instant cocoa (with water)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lemon juice&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Low fat bologna&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Lowfat waffle&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Martini&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Meat pizza, thin crust&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Miracle whip salad dressing&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Oatmeal raisin cookie&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Peanut butter &amp; jelly spread&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pig in a blanket (hot dog in dough)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Popcorn (oil popped, no butter)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Prunes&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Raw cauliflower&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rice Krispies cereal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rye bread&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Shredded wheat cereal&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Soy nuts&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Steamed or boiled crayfish&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Sugar cookie&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tamale (with meat or chicken)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tootsie roll&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Vanilla or rum dessert sauce&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Veggie burger (no bun)&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;White cake with icing&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Yellow corn (corn on the cob)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;All-fruit preserves (no added sugar)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Au gratin potatoes&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Baked or broiled salmon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bean and cheese burrito&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Beef sirloin frozen meal&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Boiled or steamed okra&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Broccoli cheese soup&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Canadian bacon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cheese cracker&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Chewing gum (sugar-free)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Chicken or pork fried rice&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Chocolate chip cookie&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Chunky beef vegetable soup&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cooked beets&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cordial or liqueur&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cream cheese (regular)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Deli sliced roast beef&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Dry milk powder, low fat&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fat-free American cheese&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Flour (wheat) tortilla&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fried chicken liver&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fried shrimp (breaded or battered)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Fruit roll-up (fruit snack chews)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Glazed carrots&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Grilled steak (eat lean only)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Hollandaise sauce&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ice cream, rich&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Latte&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lo mein (meatless)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lowfat cottage cheese&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Marshmallow topping&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Meat lasagna&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Milky Way candy bar&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Oatmeal (flavored)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Peanut brittle&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pickle relish&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pomegranate (raw)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Protein powder&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Raw cabbage&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Rice and beans&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Rum&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Shortbread cookie&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sourdough bread&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Steamed crab (hard shell)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sub roll&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Taco salad with beef, cheese, corn chips&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Tomato soup (made with water)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Upside down cake (with fruit)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vegetarian chili&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Whiskey (bourbon, scotch, rye)&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Wrap sandwich (vegetables, rice)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;100\% whole wheat cracker (Triscuit)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Apricot (canned, light syrup)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;BBQ short ribs with sauce&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Baked or broiled cod&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Beef fajitas with veggies&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Blueberries (raw)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Breaded pork chop (eat lean only)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cake doughnut&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cheese (cheddar, Swiss)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cheesecake&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Chicken nachos&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Chili con carne (with beans)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Chocolate-covered granola bar&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cooked asparagus&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cooked tomatoes&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Cranberry juice (100\% juice)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Deli chicken or turkey loaf&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Dry beans, cooked with fat&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;English muffin with raisins&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Flavored yogurt, low fat&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Fried chicken drumstick (battered)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Fried pork rinds&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Fruit cocktail (canned in light syrup)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;General Tso chicken&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Grilled pork chop (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Hard or soft boiled egg&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Ice cream cone (wafer or cake, shell only)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Krackel or Crunch Bar&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Liqueur with cream&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Low-fat popcorn&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Maraschino cherries&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Meat &amp; veggie pizza, thin crust&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Milk gravy&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Noodle pudding&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Peach (raw)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Persimmons (raw)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Plantain soup&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Powdered sugar (confectioner&apos;s sugar)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Raspberries (raw)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Reduced-fat Triscuit&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Roasted veal&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Seafood stuffed shells with tomato sauce&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Sour cream&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Steak sandwich on roll&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Stuffed cabbage rolls (beef &amp; rice)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tabasco sauce (hot sauce)&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Tomato cucumber salad, with oil &amp; vinegar&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Turkey sausage&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Vegetable tempura&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Wheaties cereal&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Worcestershire sauce&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Apple Jacks cereal&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Baked chicken dark meat (eat skin)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Banana&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Beef and cheese enchilada&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Beer or ale&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Breaded fried mushrooms&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Buttered popcorn&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Carrot salad&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cheese sauce, low fat&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chicken enchilada&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chicken vegetable soup&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Chocolate milk, whole milk&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Coffee cake&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cooked mixed vegetables&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Cornbread stuffing&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Creamy dressing (ranch)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Dietetic topping&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Egg, cheese &amp; bacon on biscuit&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fig (dried)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fried beef liver&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fried green tomatoes&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Frozen yogurt, low fat&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Fruity Pebbles cereal&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Green olives&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Gumbo (with rice, New Orleans type)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Hot dog (frankfurter)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Jelly doughnut&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Light cream&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Low lactose whole milk&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Macaroni salad with egg&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Mayonnaise, regular&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Melba toast&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Mushroom gravy&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Parsley&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Peas and carrots&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Pizza rolls or bites&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Potato pudding&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Raised doughnut, frosted&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Reduced fat potato chips (all flavors)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Roasted chestnuts&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Sausage, egg, and cheese croissant&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Snickers candy bar&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Spanish rice&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Stir-fried pork, vegetables &amp; rice&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Sweet &amp; sour soup&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Teriyaki steak with sauce&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Tuna egg salad (with celery, mayo)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Vegetable oil (canola, corn, olive, etc)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Watermelon (raw)&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Whole wheat pancakes&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;2\% milk (reduced fat)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Apple pie with crumb topping&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Baked chicken drumstick (no skin)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Barbeque sauce&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Beef broth or consomme&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Black olives&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Breaded fried steak (eat lean only)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Buttermilk&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cassava&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cheese tortellini with cream sauce&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Chicken fettuccine diet frozen meal&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Chicken with rice diet frozen meal&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Chocolate sauce (thin type)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Coffee Mate (powder)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cooked onions&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Cottage cheese, creamed&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Croutons&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Double cheeseburger on double deck bun&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Egg, cheese &amp; sausage on English muffin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Filberts (hazelnuts)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Fried calamari (fried squid)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Fried oysters (breaded or battered)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Frozen yogurt, whole milk&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Garlic&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Greens with ham or pork&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Ham salad spread&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Hush puppy&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Ketchup (catsup)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Light ice cream&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Low-calorie mayonnaise&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Malted milk (Ovaltine)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Meal replacement drink (Slim Fast)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Mexican chicken vegetable soup with rice&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Nectarine (raw)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Pasta salad with vegetables&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Pecans&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Plain muffin&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Potato salad with egg&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Raisin bran cereal&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Reduced-fat chocolate chip cookie&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Roasted duck&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Scalloped potatoes&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Soft drink, regular&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Spinach lasagna (vegetarian)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Strawberries (cooked or canned in syrup)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Sweet cherries (raw)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tofu&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tuna salad (with celery, mayo)&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Vegetable pizza, thin crust&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Wheat bran, unprocessed&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Whole wheat tortilla&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Apple chips&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Baked beans&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Baked sweet potato&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Beef and bean burrito&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Beef, bean, and cheese burrito&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Brazil nuts&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Buffalo wing (chicken wing &amp; sauce)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Caramel corn&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Cheese ravioli (no sauce)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chicken chow mein with noodles&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chicken soft taco&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chocolate milk, 1\% (low fat)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Coconut candy, chocolate-covered&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Cooked green lima beans&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Corn relish&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Cream puff or �clair&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Dietetic hard candy&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Egg roll with vegetables&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fat-free thousand island dressing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;French onion soup&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fried egg&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Frosted Mini-Wheats cereal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fruit yogurt, low fat&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Grapefruit (raw)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Ground turkey&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Horseradish&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Jello&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Lettuce&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Low lactose fat free (skim) milk&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Macaroni and cheese (homemade type)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Matzo ball&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Meatless sausage&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Mozzarella cheese (part skim)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pancakes&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Peanuts&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pistachios&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pork, veggies and noodles (tomato sauce)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Quiche (with meat, poultry or fish)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Raw sweet pepper (bell pepper)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Roast beef sandwich&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sauerkraut&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Smoked salmon (lox)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Spaghetti with meat sauce&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Stir-fried beef, veggies &amp; noodles&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sweet &amp; sour dressing&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tea (sweetened)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Trix cereal&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Vegetable beef soup (homemade)&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Walnuts&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;White sugar (granulated or lump)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;American cheese (processed)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bacon cheeseburger on bun&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Baked or broiled tuna&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bean salad (green, yellow, kidney beans)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Beef stew, potatoes &amp; vegetables&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Bran flakes cereal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Broiled veal chop&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Canned tuna (in water)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cheese manicotti with tomato sauce&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Chicken and dumplings&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Chicken patty or fillet (breaded)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Chocolate cream pie&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cinnamon Toast Crunch cereal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cooked cabbage&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Corn flakes cereal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cream of chicken soup (with water)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Deviled egg&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Egg Beaters&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Fat-free coffee cake&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Fortune cookie&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Fried chicken thigh (no skin)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Fried tofu&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Granola bar&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Ground beef (75\% lean, regular)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Honey Bunches of Oats cereal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Instant cocoa, diet (with water)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lemon meringue pie&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Low fat cheddar or Swiss&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Lucky Charms cereal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mashed potatoes (with butter)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Meat ravioli with tomato sauce&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Miso soup&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Onion rings&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Peanut butter cookie&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pina colada&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Popsicle&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Pudding (instant or canned)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Raw celery&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Rice with tomato sauce&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Salisbury steak frozen meal&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Shrimp fried rice&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Soy sauce&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Steamed or boiled lobster&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Sugar-free Jello (diet)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tangerine (raw)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Tortilla chips (Doritos, Tostitos)&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Vanilla sandwich cookie&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Vienna sausage&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;White icing&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Zucchini bread&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;fruit smoothie (no milk)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Almonds&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Avocado&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Baked or broiled scallops&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Bean burrito&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Beef sloppy joe (no bun)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Boiled potatoes&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Broccoli with cheese sauce&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Candied sweet potato&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cheese Danish pastry&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Chex cereal (corn, wheat, or bran)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Chicken or turkey pot pie&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Chocolate chip muffin&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cilantro&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cooked broccoli&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Corn chips (Fritos)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Cream cheese dip&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Deli sliced turkey or chicken breast&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Duck sauce&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fat-free berry or banana muffin&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fried chicken thigh (battered)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fried steak (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Fruit salad (no dressing)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Golden Grahams cereal&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Grits, no fat added&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Home fries&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Imitation crabmeat&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Lemon chicken&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Lobster bisque&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Lowfat granola bar&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Marshmallows&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Meat pizza, thick crust&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Minestrone soup&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Oatmeal (plain)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Peanut butter&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Pickled beets&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Pop Tart&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Prune juice (100\% juice)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Raw carrots&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Rice Chex cereal&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Rum &amp; coke&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Shredded sweetened coconut&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Soy burger (no bun)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Steamed dumpling, meat filled&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Succotash (lima beans and corn)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Taffy&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Tonic water (quinine water)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;V-8 juice (tomato-vegetable juice)&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Vegetarian meatloaf or patty&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;White bread&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Yellow cake with icing&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;foccacia&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Apple (raw)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Baked Pringles potato chips&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Baked battered fish fillet&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bean taco (cheese, lettuce, tomato, salsa)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Beef with BBQ sauce&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Bratwurst&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Brownie, no icing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Caramel candy&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cheese quesadilla&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chicken chimichanga&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chicken sandwich with mayo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Chocolate icing&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cocoa Puffs cereal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cooked green beans&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Corn puffs (Cheetos)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Cream of wheat&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Dietetic chocolate-covered candy&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Egg roll with meat&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Fat-free spread (margarine type)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;French fries, oven-baked&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Fried cod (breaded or battered)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Frosted Flakes cereal&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Fruit yogurt, fat-free sugar-free&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grapefruit (canned, light syrup)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Ground beef (95\% lean)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Honeydew melon (raw)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Jambalaya (with meat &amp; rice)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Lentils&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Low fat, low sugar ice milk&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Macaroni and cheese (from dry mix)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Matzo&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Meatless hot dog (no bun)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Moon pie&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Oreo or thin mint cookie&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Peanut sauce&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pineapple juice (100\% juice)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Pork spareribs (eat lean only)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Quarter pound hamburger on bun&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Raw spinach&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Roast beef (eat lean only)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sangria&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Smoked ham (lean)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Spaghetti sauce, fat-free (meatless)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Stick margarine&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Sweet &amp; sour chicken&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tator tots&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Trail mix (nuts, seeds, dried fruit)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Vegetable beef soup (canned)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Waldorf salad (apple salad in dressing)&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;White sauce (cream sauce)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alfredo sauce&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Apricot (raw)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;BBQ spareribs &amp; sauce (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Baked or broiled flounder&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Beef gravy&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Blueberry or banana muffin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Breakfast bar&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cake doughnut, frosted&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cheese blintz&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chef salad, no dressing&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chicken noodle soup&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chives&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chopped chicken liver&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cooked barley&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cooked turnip&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Cranberry juice cocktail&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Deli ham (extra lean)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dry beans, cooked without fat&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fast Break candy bar (Reese&apos;s)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Flavored yogurt, whole milk&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fried chicken fillet sandwich&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fried rice (plain)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Fruit drink (punch, ade, or cooler)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Gin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Grilled pork chop (eat lean only)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hard pretzels&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Ice cream sandwich&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Kung Pao chicken&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Lite beer&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Lowfat bran &amp; fruit muffin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Margarita&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Meat and cheese quesadilla&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Milk shake (whole milk)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Nut topping (wet)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Peach cobbler&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Pesto sauce&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Plum (raw)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Pozole&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Raw bean sprouts&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Refried beans&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Roasted venison&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sesame seeds&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sour cream dip&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Steak sauce (A-1)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Stuffed mushrooms (bread, meat &amp; cheese)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Table wine (all)&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Tomato juice&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Turkey with dressing frozen meal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Vegetable-pasta combo&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Whipped butter&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Wrap sandwich (meat, vegetables, rice)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Apple cider&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Baked chicken breast (eat skin)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Baked winter squash&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Beef and bean nachos&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Beef, tomato sauce &amp; noodles&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Bread stick&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Bulgur, no fat added&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Carrot cake with icing&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cheese sandwich cracker&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chicken cordon bleu&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chicken teriyaki&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chocolate milk, 2\% (reduced fat)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Coconut milk&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cooked green peas&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Corn tortilla&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Cream style corn&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Dietetic jelly (low cal sweetener)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Egg salad&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Feta or goat cheese&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;French toast&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fried fish (breaded or battered)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Frosted sweet roll or cinnamon bun&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Fruit yogurt, whole milk&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Grapefruit juice (unsweetened)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guacamole&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Horseradish sauce&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Jello with fruit&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Life cereal (plain &amp; cinnamon)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Low lactose lowfat (1\%) milk&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Macaroni and cheese with beef&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Matzo ball soup&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Meatloaf or meatball, no sauce&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Multigrain bread&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Papaya (raw)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Pear (canned in light syrup)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Pita bread (100\% whole wheat)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Potato chips, regular (all flavors)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Radish&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Raw tomatoes&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Roast pork (lean)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sausage biscuit&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Snack cracker&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Spaghetti with tomato sauce (meatless)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Stir-fried chicken &amp; veggies on rice&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sweet &amp; sour pork&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tea (unsweetened)&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tub margarine&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Vegetable broth&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Whole milk&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Anchovy&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bacon grease (or meat drippings)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Baked or low-fat tortilla chips&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bean soup&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Beef stroganoff with noodles&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bran muffin&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Brown rice, no fat added&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cantaloupe&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cheese nachos&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Chicken and rice with cream sauce&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Chicken rice soup&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Chocolate cupcake with icing/filling&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Club sandwich (chicken, bacon, tomato)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cooked carrots&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Corn fritter&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cream of mushroom soup (made with milk)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Diet high-fiber bread&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Egg drop soup&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fat-free Italian dressing&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;French bread&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fried chicken wing (battered)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fried whiting (floured or breaded)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Granola cereal (homemade)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ground beef (80\% lean)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Honey Nut Cheerios&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Italian dressing (oil &amp; vinegar)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Lemon-butter sauce&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Low fat cream cheese&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;M&amp;M&apos;s candies with peanuts&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mashed potatoes (with milk and butter)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Meatball Sub&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mixed nuts&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Orange (raw)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Peanut butter cups (Reese&apos;s)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pine nuts (pignolias)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pork &amp; beans&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pudding, no sugar added&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Raw hot pepper (jalapeno)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Rice with vegetables&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Salisbury steak with gravy&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Shrimp lo mein&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Soymilk&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Steamed or boiled shrimp&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Sugar-free Jello with fruit (diet)&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Taquitoes&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tortilla soup&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Vanilla wafer&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Vinegar&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;White rice, no fat added&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Zucchini or summer squash&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;fruit smoothie made with milk&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Angel food cake&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bagel (plain)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Baked potato, plain (don&apos;t eat peel)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bean soup with ham&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Beef taco (cheese, lettuce, tomato, salsa)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bran, multigrain, or wheat waffle&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Brown sugar&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cap&apos;n Crunch cereal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cheese pizza, thick crust&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chicken and rice with tomato sauce&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chicken salad (with celery, mayo)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Chocolate flavored drink&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Club soda (seltzer)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cooked cauliflower&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Corn Pops cereal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Cream of potato soup&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Diet high-fiber multigrain bread&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Egg noodles (no fat added)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Fat-free mayonnaise-type dressing&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;French dressing&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Fried chicken wing (no coating)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Fried wonton&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Fruit soup&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Grape juice (100\% juice)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ground beef (85\% lean)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Honey Smacks cereal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Jam or preserves&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Lemonade&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Low fat hot dog&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;M&amp;M&apos;s plain chocolate candies&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Mashed potatoes (with milk, no butter)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Meatless bacon bits&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Mixed salad greens&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Orange juice (100\% juice)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Peanut butter sandwich cracker&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pineapple (canned in light syrup)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pork or ham with BBQ sauce&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Pumpkin pie&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Raw mushrooms&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Ricotta cheese&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Salsa&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Shrimp with pasta diet frozen meal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Spaghetti sauce (meatless)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Stew vegetables&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Sugar-free popsicle (diet)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Taro (cocoyam), boiled&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Tossed salad (lettuce and vegetables)&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Veal cutlet or steak, fried&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Vodka or tequila&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;White rice, with butter or oil&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;100\% Fruit juice blend (Juicy Juice)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Apple pie, two crust&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Baked chicken thigh (no skin)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Battered fried chicken (eat skin)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Beef burrito (no beans)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Blackeye peas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Breaded fried summer squash&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Buttermilk biscuit&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cassava bread&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cheese tortellini with tomato sauce&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chicken gravy&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chicken, veggies &amp; noodles (cream sauce)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Chocolate wafer cookie&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Coffee Mate Lite (liquid)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cooked snowpeas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Couscous, no fat added&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Crystal Lite (low-calorie fruit drink)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Double hamburger on bun&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Eggplant Parmesan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fitness Water (Propel)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fried catfish (breaded or battered)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fried plantain&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fruit blintz&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Garlic bread&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Greens, cooked with fat&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ham sandwich with mayo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ice cream bar, chocolate covered&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Kim chee (made from cabbage)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Light ice cream bar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Low-calorie salad dressing&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Mandarin oranges (light syrup)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Meal replacement powder (Slim Fast)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Milk chocolate bar or candy (plain)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;New England clam chowder&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Pastrami (beef)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Pedialyte&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Plain yogurt, fat free&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Potato skin with cheese &amp; bacon&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Raisin bread&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Reduced-fat oatmeal raisin cookie&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Roasted potatoes&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Scrambled egg (cooked with fat)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Soft pretzel&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Spinach quiche&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Strawberries (raw)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Sweet pickle (gherkin)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Tofu and vegetables (Monk&apos;s food)&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Turkey bacon&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Vegetable rice soup&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Wheat cracker&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Wild rice, no fat added&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;All-Bran cereal&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Artichoke&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;BBQ spareribs &amp; sauce (eat lean only)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Baked or broiled perch&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Beef jerky&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Blueberry pancakes&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Breakfast sausage (brown &amp; serve)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Calorie-free sweetener&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cheese bread&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chewing gum (made with sugar)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chicken nuggets&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chocolate cake with icing&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Chow fun rice noodles&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cooked bean sprouts&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cool Whip&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cranberry sauce&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Deli ham (regular)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Dry blackeye peas, cooked without fat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fat free milk (skim)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Flax seed&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fried chicken frozen meal&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fried scallops (floured or breaded)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Fruit ice (Italian fruit ice)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Gin &amp; tonic&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Grilled steak (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Hash browns&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ice cream, regular&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lamb chop&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Liver and onions&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Lowfat Cool Whip&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Marshmallow rice krispies bar&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Meat and cheese turnover (Hot Pockets)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Milk shake, low fat&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Nutella (chocolate hazelnut spread)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Peach nectar&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Philly cheese steak (pepper, onion, roll)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Polish sausage&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Pringles potato chips&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Raw broccoli&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Refrigerated biscuit (canned dough)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Romaine lettuce&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Sherbet&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Sour cream, low fat or light&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Steamed clams (oysters, mussels)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Stuffed pepper (with rice and meat)&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Taco or tostada shell&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Tomato sauce&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Twix cookie bars&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Vegetable-pasta combo with cream sauce&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Whipped cream, sweetened&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Wrap sandwich (vegetables only)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;100\% whole wheat bagel&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Applesauce (sweetened)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Baked fish&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Battered fried chicken breast&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Beef chimachanga&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bloody Mary&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Breaded fried vegetable sticks&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Butterscotch sauce&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cassava with creole sauce&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cheese tortellini, no sauce&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chicken gumbo soup&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chickpeas&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Chocolate-covered almonds&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Coffee Mate Lite  (powder)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cooked spinach&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Crab cake&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Cucumber&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Dried fruit (apricot, apple, etc.)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Enchilada sauce&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Flavored soymilk&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Fried cheese sticks&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Fried pork chop (eat lean &amp; fat)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Fruit bread (banana, etc.)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Gatorade or Powerade (sports drink)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Greens, cooked without fat&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Hamburger, plain on bun&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Ice cream cake&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Kiwifruit (raw)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Light ice cream sandwich&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Low-fat corn puffs (cheese curls)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Mango (raw)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Meat &amp; cheese calzone or stromboli&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Milk chocolate bar with almonds&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Nigiri sushi (with fish and veggies)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Pea salad&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Pepperoni&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Plain yogurt, whole milk&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Potato sticks&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Raisins&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Reduced-fat Oreo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Roasted turkey (white &amp; dark meat)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Scrambled egg (cooked without fat)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Soft serve ice cream&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Split pea soup with ham&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Stuffed baked potato (with cheese)&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Sweetened condensed milk&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Tofu, firm&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Turkey breast lunch meat, fat free&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Vegetable shortening&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Wheat or cracked wheat bread&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Wine cooler&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FOOD_PRICES_TABLE (C##CS329E_MAP4542)' inline='true' name='oracle.42134.766244756900' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_MAP4542' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_map4542'>
        <relation name='FOOD_PRICES_TABLE' table='[C##CS329E_MAP4542].[FOOD_PRICES_TABLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>FOOD_CODE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FOOD_CODE]</local-name>
            <parent-name>[FOOD_PRICES_TABLE]</parent-name>
            <remote-alias>FOOD_CODE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>9</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FOOD_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FOOD_NAME]</local-name>
            <parent-name>[FOOD_PRICES_TABLE]</parent-name>
            <remote-alias>FOOD_NAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PRICE_PERGRAM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PRICE_PERGRAM]</local-name>
            <parent-name>[FOOD_PRICES_TABLE]</parent-name>
            <remote-alias>PRICE_PERGRAM</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Food Code' datatype='integer' datatype-customized='true' name='[FOOD_CODE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Food Name' datatype='string' name='[FOOD_NAME]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Price Per Gram' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0.00' name='[PRICE_PERGRAM]' role='measure' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Eggs: Cals v. Price Per Gram'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOOD_CALS_TABLE (C##CS329E_MAP4542)' name='oracle.42134.753843958300' />
            <datasource caption='FOOD_PRICES_TABLE (C##CS329E_MAP4542)' name='oracle.42134.766244756900' />
          </datasources>
          <datasource-dependencies datasource='oracle.42134.753843958300'>
            <column caption='Calories' datatype='real' datatype-customized='true' name='[CALORIES]' role='measure' type='quantitative'>
            </column>
            <column caption='Display Name' datatype='string' name='[DISPLAY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Food Code' datatype='integer' datatype-customized='true' name='[FOOD_CODE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DISPLAY_NAME]' derivation='None' name='[none:DISPLAY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[FOOD_CODE]' derivation='None' name='[none:FOOD_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CALORIES]' derivation='Sum' name='[sum:CALORIES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42134.766244756900'>
            <column caption='Price Per Gram' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0.00' name='[PRICE_PERGRAM]' role='measure' type='ordinal'>
            </column>
            <column-instance column='[PRICE_PERGRAM]' derivation='Sum' name='[sum:PRICE_PERGRAM:ok]' pivot='key' type='ordinal' />
            <column-instance column='[PRICE_PERGRAM]' derivation='Sum' name='[sum:PRICE_PERGRAM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]'>
            <groupfilter expression='STARTSWITH(LOWER([DISPLAY_NAME]), LOWER(&apos;egg&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='egg' user:ui-pattern_type='starts-with'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:DISPLAY_NAME:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Egg noodles (no fat added)&quot;' />
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Egg noodles with butter or oil&quot;' />
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Egg roll with meat&quot;' />
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Egg roll with vegetables&quot;' />
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Eggplant Parmesan&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]' direction='DESC' using='[oracle.42134.753843958300].[sum:CALORIES:qk]'>
          </sort>
          <slices>
            <column>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]' value='240' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]' value='c&quot;$&quot;#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]' symmetric='false' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#cacaca</color>
                <color>#afc2b4</color>
                <color>#96bb9f</color>
                <color>#7eb48b</color>
                <color>#68ad78</color>
                <color>#53a666</color>
                <color>#3f9f56</color>
                <color>#2d9846</color>
                <color>#1d9138</color>
                <color>#0d8a2b</color>
                <color>#00831f</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]' />
              <size column='[oracle.42134.766244756900].[sum:PRICE_PERGRAM:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>([oracle.42134.753843958300].[none:DISPLAY_NAME:nk] / [oracle.42134.753843958300].[none:FOOD_CODE:ok])</rows>
        <cols>[oracle.42134.753843958300].[sum:CALORIES:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Ice Cream'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOOD_CALS_TABLE (C##CS329E_MAP4542)' name='oracle.42134.753843958300' />
            <datasource caption='FOOD_PRICES_TABLE (C##CS329E_MAP4542)' name='oracle.42134.766244756900' />
          </datasources>
          <datasource-dependencies datasource='oracle.42134.753843958300'>
            <column caption='Display Name' datatype='string' name='[DISPLAY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Food Code' datatype='integer' datatype-customized='true' name='[FOOD_CODE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DISPLAY_NAME]' derivation='None' name='[none:DISPLAY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[FOOD_CODE]' derivation='None' name='[none:FOOD_CODE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42134.766244756900'>
            <column caption='Price Per Gram' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0.00' name='[PRICE_PERGRAM]' role='measure' type='ordinal'>
            </column>
            <column-instance column='[PRICE_PERGRAM]' derivation='Sum' name='[sum:PRICE_PERGRAM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]'>
            <groupfilter expression='CONTAINS(LOWER([DISPLAY_NAME]), LOWER(&apos;ice cream&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='ice cream' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:DISPLAY_NAME:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([oracle.42134.753843958300].[none:DISPLAY_NAME:nk] / [oracle.42134.753843958300].[none:FOOD_CODE:ok])</rows>
        <cols>[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Soups: Price and Cals'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOOD_CALS_TABLE (C##CS329E_MAP4542)' name='oracle.42134.753843958300' />
            <datasource caption='FOOD_PRICES_TABLE (C##CS329E_MAP4542)' name='oracle.42134.766244756900' />
          </datasources>
          <datasource-dependencies datasource='oracle.42134.753843958300'>
            <column caption='Calories' datatype='real' datatype-customized='true' name='[CALORIES]' role='measure' type='quantitative'>
            </column>
            <column caption='Display Name' datatype='string' name='[DISPLAY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Food Code' datatype='integer' datatype-customized='true' name='[FOOD_CODE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Saturated Fats' datatype='real' datatype-customized='true' name='[SATURATED_FATS]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[DISPLAY_NAME]' derivation='None' name='[none:DISPLAY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[FOOD_CODE]' derivation='None' name='[none:FOOD_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SATURATED_FATS]' derivation='None' name='[none:SATURATED_FATS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CALORIES]' derivation='Sum' name='[sum:CALORIES:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42134.766244756900'>
            <column caption='Price Per Gram' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0.00' name='[PRICE_PERGRAM]' role='measure' type='ordinal'>
            </column>
            <column-instance column='[PRICE_PERGRAM]' derivation='None' name='[none:PRICE_PERGRAM:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]'>
            <groupfilter expression='CONTAINS(LOWER([DISPLAY_NAME]), LOWER(&apos;soup&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='soup' user:ui-pattern_type='contains'>
              <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:DISPLAY_NAME:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Bean soup with ham&quot;' />
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Fruit soup&quot;' />
                  <groupfilter function='member' level='[none:DISPLAY_NAME:nk]' member='&quot;Plantain soup&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]' direction='DESC' using='[oracle.42134.753843958300].[sum:CALORIES:qk]'>
          </sort>
          <slices>
            <column>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[oracle.42134.766244756900].[none:PRICE_PERGRAM:ok]' value='92' />
            <format attr='width' field='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]' value='236' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42134.766244756900].[none:PRICE_PERGRAM:ok]' value='c&quot;$&quot;#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42134.753843958300].[none:SATURATED_FATS:qk]' palette='area-red-green' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42134.753843958300].[none:SATURATED_FATS:qk]' />
              <text column='[oracle.42134.753843958300].[sum:CALORIES:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42134.753843958300].[none:DISPLAY_NAME:nk] / ([oracle.42134.753843958300].[none:FOOD_CODE:ok] / [oracle.42134.766244756900].[none:PRICE_PERGRAM:ok]))</rows>
        <cols>[oracle.42134.753843958300].[sum:CALORIES:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Yogurt: Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='FOOD_CALS_TABLE (C##CS329E_MAP4542)' name='oracle.42134.753843958300' />
            <datasource caption='FOOD_PRICES_TABLE (C##CS329E_MAP4542)' name='oracle.42134.766244756900' />
          </datasources>
          <datasource-dependencies datasource='oracle.42134.753843958300'>
            <column caption='Display Name' datatype='string' name='[DISPLAY_NAME]' role='dimension' type='nominal'>
            </column>
            <column caption='Food Code' datatype='integer' datatype-customized='true' name='[FOOD_CODE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Solid Fats' datatype='real' datatype-customized='true' name='[SOLID_FATS]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[DISPLAY_NAME]' derivation='None' name='[none:DISPLAY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[FOOD_CODE]' derivation='None' name='[none:FOOD_CODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SOLID_FATS]' derivation='Sum' name='[sum:SOLID_FATS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42134.766244756900'>
            <column caption='Price Per Gram' datatype='real' datatype-customized='true' default-format='c&quot;$&quot;#,##0.00' name='[PRICE_PERGRAM]' role='measure' type='ordinal'>
            </column>
            <column-instance column='[PRICE_PERGRAM]' derivation='Sum' name='[sum:PRICE_PERGRAM:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]'>
            <groupfilter expression='CONTAINS(LOWER([DISPLAY_NAME]), LOWER(&apos;yogurt&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='yogurt' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:DISPLAY_NAME:nk]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' x-axis-name='[oracle.42134.753843958300].[sum:SOLID_FATS:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([oracle.42134.753843958300].[none:DISPLAY_NAME:nk] / [oracle.42134.753843958300].[none:FOOD_CODE:ok])</rows>
        <cols>([oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk] + [oracle.42134.753843958300].[sum:SOLID_FATS:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Eggs: Cals v. Price Per Gram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='pattern' param='[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</field>
          <field>[oracle.42134.753843958300].[none:FOOD_CODE:ok]</field>
          <field>[oracle.42134.766244756900].[none:FOOD_CODE:ok]</field>
          <field>[oracle.42134.766244756900].[none:FOOD_NAME:nk]</field>
          <field>[oracle.42134.766244756900].[none:PRICE_PERGRAM:qk]</field>
          <field>[oracle.42134.766244756900].[sum:PRICE_PERGRAM:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Soups: Price and Cals'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[oracle.42134.753843958300].[none:SATURATED_FATS:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42134.753843958300].[none:FOOD_CODE:ok]</field>
          <field>[oracle.42134.753843958300].[none:SATURATED_FATS:qk]</field>
          <field>[oracle.42134.766244756900].[none:PRICE_PERGRAM:ok]</field>
          <field>[oracle.42134.766244756900].[rank:sum:PRICE_PERGRAM:ok:1]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Yogurt: Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</field>
          <field>[oracle.42134.753843958300].[none:FOOD_CODE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Ice Cream'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42134.753843958300].[none:DISPLAY_NAME:nk]</field>
          <field>[oracle.42134.753843958300].[none:FOOD_CODE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Eggs: Cals v. Price Per Gram' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Soups: Price and Cals' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Yogurt: Price' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ice Cream' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
